// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model positions {
    id        String  @id @default(cuid())
    idApi     Int @unique
    name      String
    shortName      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime?

    playerAssociations  playerAssociations[]

    @@index([name])
}

model nationalities {
    id        String  @id @default(cuid())
    idApi     Int @unique
    name      String
    imageUrl  String
    isPopular  Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime?

    players  players[]

    @@index([name])
}

model leagues {
  id        String    @id @default(cuid())
  idApi     Int @unique
  name      String
  idRegion  Int
  isPopular Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  teams     teams[]

  @@index([name])
}

model teams {
  id        String    @id @default(cuid())
  idApi     Int @unique
  idLeague  Int
  name      String
  imageUrl  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  league    leagues   @relation(fields: [idLeague], references: [idApi])

  playerAssociations  playerAssociations[]

  @@index([name])
}

model players {
  id       String    @id @default(cuid())
  idApi    Int @unique
  rank     Int
  name      String
  commonName   String?
  birthdate    String
  height  Int
  weight  Int
  avatarUrl   String
  shieldUrl   String
  idNationality  Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  nationality    nationalities   @relation(fields: [idNationality], references: [idApi])
  playerAssociations  playerAssociations[]
  gkStats  gkStats[]
  playerStats  playerStats[]

  @@index([name])
}

model playerAssociations {
  id       String    @id @default(cuid())
  idPlayer    Int
  idTeam      Int
  idPosition   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  team    teams   @relation(fields: [idTeam], references: [idApi])
  player    players   @relation(fields: [idPlayer], references: [idApi])
  position    positions   @relation(fields: [idPosition], references: [idApi])

  @@index([idPlayer])
}

model gkStats {
  id       String    @id @default(cuid())
  idPlayer    Int
  overallRating Int
  skillMoves Int
  weakFootAbility Int
  attackingWorkRate Int
  defensiveWorkRate Int
  preferredFoot Int
  gkDiving Int
  gkHandling Int
  gkKicking Int
  gkReflexes Int
  gkSpeed Int
  gkPositioning Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  player    players   @relation(fields: [idPlayer], references: [idApi])

  @@index([idPlayer])
}

model playerStats {
  id       String    @id @default(cuid())
  idPlayer    Int
  overallRating Int
  skillMoves Int
  weakFootAbility Int
  attackingWorkRate Int
  defensiveWorkRate Int
  preferredFoot Int
  pace Int
  shooting Int
  passing Int
  dribbling Int
  defending Int
  physicality Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  player    players   @relation(fields: [idPlayer], references: [idApi])

  @@index([idPlayer])
}
